(window.webpackJsonp=window.webpackJsonp||[]).push([[45],{279:function(e,t,n){"use strict";t.a={name:"VueRemarkRoot",render:function(e){return e("div",null,this.$slots.default)}}},787:function(e,t,n){"use strict";n.r(t);var o=n(0),a=n(54),r=(n(88),n(20),n(34),n(279)),i=n(1),s=(i.default.config.optionMergeStrategies,{VueRemarkRoot:r.a}),l=function(e){var t=e.options.components=e.options.components||{},n=e.options.computed=e.options.computed||{};Object.keys(s).forEach((function(e){"object"===Object(a.a)(s[e])&&"function"==typeof s[e].render?t[e]=s[e]:n[e]=function(){return s[e]}}))},h=i.default.config.optionMergeStrategies,c="__vueRemarkFrontMatter",u={excerpt:null,title:"Rholang"};var g=function(e){e.options[c]&&(e.options[c]=u),i.default.util.defineReactive(e.options,c,u),e.options.computed=h.computed({$frontmatter:function(){return e.options[c]}},e.options.computed)},d=Object(o.a)({},(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("VueRemarkRoot",[n("h1",{attrs:{id:"rholang"}},[n("a",{attrs:{href:"#rholang","aria-hidden":"true"}},[e._v("#")]),e._v("Rholang")]),n("p",[e._v("Rholang is a new programming language designed for use in distributed systems. This document describes the syntax in Rholang.")]),n("p",[e._v('Rholang is "process-oriented": all computation is done by means of message passing.  Messages are passed on "channels", which are rather like message queues; however, the channels behave more like bags (multisets) rather than queues, since there is no implicit ordering on messages.  ')]),n("p",[e._v("Rholang is completely asynchronous, in the sense that while you can read a message from a channel and then do something with it, you can't send a message and then do something once it has been received, at least, not without explicitly waiting for an acknowledgment message from the receiver. Every channel has a name, and every name denotes a unique channel.")]),n("h2",{attrs:{id:"getting-started"}},[n("a",{attrs:{href:"#getting-started","aria-hidden":"true"}},[e._v("#")]),e._v("Getting started")]),n("p",[e._v("Get started with Rholang by selecting one of the options below.")]),n("ul",[n("li",[n("strong",[e._v("Run Rholang on RNode")]),e._v(" - Write Rholang contracts in an editor of your choice and run them on RNode using either the REPL or EVAL modes. "),n("a",{attrs:{href:"https://github.com/rchain/rchain/releases",target:"_blank",rel:"nofollow noopener noreferrer"}},[e._v("Get started")]),e._v(" with the latest version of RNode.")]),n("li",[n("strong",[e._v("Run Rholang on a web interface")]),e._v(" - This "),n("g-link",{attrs:{to:"http://rchain.cloud",target:"_blank",rel:"nofollow noopener noreferrer"}},[e._v("web interface")]),e._v(" was created by a RChain community member.")],1),n("li",[n("strong",[e._v("Run Rholang using Cryptofex IDE")]),e._v(" - This closed source "),n("a",{attrs:{href:"http://cryptofex.io/download",target:"_blank",rel:"nofollow noopener noreferrer"}},[e._v("IDE")]),e._v(" was created by Pyrofex.")]),n("li",[n("strong",[e._v("Write Rholang using an IntelliJ plugin")]),e._v(" - This "),n("a",{attrs:{href:"https://github.com/tgrospic/rholang-idea",target:"_blank",rel:"nofollow noopener noreferrer"}},[e._v("Rholang IntelliJ plugin")]),e._v(" was created by a RChain community member.")])]),n("h2",{attrs:{id:"rholang-language-specification"}},[n("a",{attrs:{href:"#rholang-language-specification","aria-hidden":"true"}},[e._v("#")]),e._v("Rholang language specification")]),n("p",[n("g-link",{attrs:{to:"https://developer.rchain.coop/assets/rholang-spec-0.2.pdf",target:"_blank",rel:"nofollow noopener noreferrer"}},[e._v("Language specification")])],1)])}),[],!1,null,null,null);"function"==typeof l&&l(d),"function"==typeof g&&g(d);t.default=d.exports}}]);